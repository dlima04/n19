macro(n19_enumerate_arch)
  set(N19_IS_X86 OFF)
  set(N19_IS_X86_64 OFF)
  set(N19_IS_ARM OFF)
  set(N19_IS_ARM64 OFF)
  set(N19_IS_RISCV32 OFF)
  set(N19_IS_RISCV64 OFF)
  set(N19_IS_PPC OFF)
  set(N19_IS_PPC64 OFF)
  set(N19_IS_MIPS OFF)

  set(N19_ARCH "${CMAKE_SYSTEM_PROCESSOR}")
  string(TOLOWER "${N19_ARCH}" N19_ARCH_LC)

  if(CMAKE_SIZEOF_VOID_P EQUAL 8 AND N19_ARCH_LC MATCHES "^(x86_64|amd64)$")
    message(STATUS "Detected target architecture: x86_64")
    set(N19_IS_X86_64 ON)
  elseif(CMAKE_SIZEOF_VOID_P EQUAL 4 AND N19_ARCH_LC MATCHES "^(x86|i[3-6]86)$")
    message(STATUS "Detected target architecture: x86")
    set(N19_IS_X86 ON)
  elseif(N19_ARCH_LC MATCHES "^(aarch64|arm64)$")
    message(STATUS "Detected target architecture: arm64")
    set(N19_IS_ARM64 ON)
  elseif(N19_ARCH_LC MATCHES "^(arm|armv7|armv6l)$")
    message(STATUS "Detected target architecture: arm")
    set(N19_IS_ARM ON)
  elseif(N19_ARCH_LC MATCHES "^(riscv64)$")
    message(STATUS "Detected target architecture: riscv64")
    set(N19_IS_RISCV64 ON)
  elseif(N19_ARCH_LC MATCHES "^(riscv32)$")
    message(STATUS "Detected target architecture: riscv32")
    set(N19_IS_RISCV32 ON)
  elseif(N19_ARCH_LC MATCHES "^(ppc64|powerpc64)$")
    message(STATUS "Detected target architecture: ppc64")
    set(N19_IS_PPC64 ON)
  elseif(N19_ARCH_LC MATCHES "^(ppc|powerpc)$")
    message(STATUS "Detected target architecture: ppc")
    set(N19_IS_PPC ON)
  elseif(N19_ARCH_LC MATCHES "^(mips|mipsel|mips64)$")
    message(STATUS "Detected target architecture: mips")
    set(N19_IS_MIPS ON)
  else()
    message(WARNING "Unrecognized architecture: ${N19_ARCH}")
  endif()
endmacro()
